services:
  app:
    container_name: inethi-backend
    restart: unless-stopped
    env_file:
      - ./.env
    build:
      context: .
      args:
        - DEV=${DEV:-false}
    ports:
      - "8000:8000"
    volumes:
      - ./inethi:/inethi
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              gunicorn inethi.wsgi:application --bind 0.0.0.0:8000"
    environment:
      - DB_HOST=${DB_HOST:-db}
      - DB_NAME=${DB_NAME:-devdb}
      - DB_USER=${DB_USER:-devuser}
      - DB_PASS=${DB_PASS:-devpass}
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.inethicloud.net`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: timescale/timescaledb:latest-pg17
    restart: unless-stopped
    container_name: inethi-backend-db-timescale
    env_file:
      - ./.env
    volumes:
      - prod-db-data-timescale:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-devdb}
      - POSTGRES_USER=${DB_USER:-devuser}
      - POSTGRES_PASSWORD=${DB_PASS:-devpass}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backenddb.entrypoints=websecure"

  redis:
    image: redis:alpine
    container_name: inethi-backend-celery-redis

  celery:
    build:
      context: .
    env_file:
      - ./.env
    restart: always
    command: celery -A inethi worker -l INFO
    volumes:
      - ./inethi:/inethi
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    container_name: inethi-backend-celery
    depends_on:
      - redis
      - db
  celery_beat:
    build:
      context: .
    env_file:
      - ./.env
    command: celery -A inethi beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./inethi:/inethi
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    container_name: inethi-backend-celery-beat
    depends_on:
      - redis
      - db


networks:
  default:
    external:
      name: "inethi-bridge-traefik"

volumes:
  prod-db-data-timescale: