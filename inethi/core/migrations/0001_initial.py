# Generated by Django 5.1 on 2025-08-08 13:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('write_access', models.BooleanField(default=False)),
                ('read_access', models.BooleanField(default=False)),
                ('contract_type', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Smart Contract',
                'verbose_name_plural': 'Smart Contracts',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(unique=True)),
                ('type', models.CharField(choices=[('entertainment', 'Entertainment'), ('learning', 'Learning'), ('utility', 'Utility')], default='utility', max_length=50)),
                ('paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('network_admin', 'Can administer the network'),),
            },
        ),
        migrations.CreateModel(
            name='AccountsIndexContract',
            fields=[
                ('smartcontract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.smartcontract')),
                ('owner_address', models.CharField(max_length=255)),
                ('entry', models.BooleanField(default=False)),
                ('entry_count', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('activate', models.BooleanField(default=False)),
                ('deactivate', models.BooleanField(default=False)),
                ('add', models.BooleanField(default=False)),
                ('remove', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Account Index Smart Contract',
                'verbose_name_plural': 'Account Index Smart Contracts',
            },
            bases=('core.smartcontract',),
        ),
        migrations.CreateModel(
            name='FaucetSmartContract',
            fields=[
                ('smartcontract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.smartcontract')),
                ('owner_address', models.CharField(max_length=255)),
                ('gimme', models.BooleanField(default=False)),
                ('give_to', models.BooleanField(default=False)),
                ('next_balance', models.BooleanField(default=False)),
                ('next_time', models.BooleanField(default=False)),
                ('registry_address', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Faucet Smart Contract',
                'verbose_name_plural': 'Faucet Smart Contracts',
            },
            bases=('core.smartcontract',),
        ),
        migrations.AddField(
            model_name='smartcontract',
            name='user',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_address', models.CharField(max_length=256)),
                ('sender_address', models.CharField(blank=True, max_length=256, null=True)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('transaction_hash', models.CharField(blank=True, max_length=256, null=True)),
                ('block_number', models.CharField(blank=True, max_length=256, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=256, null=True)),
                ('gas_used', models.DecimalField(blank=True, decimal_places=8, max_digits=18, null=True)),
                ('category', models.CharField(choices=[('TRANSFER', 'Transfer'), ('INTERNET_COUPON', 'Internet Coupon'), ('REWARD', 'Reward'), ('PAYMENT', 'Payment'), ('OTHER', 'Other')], default='TRANSFER', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_transactions', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default_name', max_length=255)),
                ('private_key', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255, unique=True)),
                ('token_common_name', models.CharField(default='KRONE', max_length=255)),
                ('token', models.CharField(default='KRONE', max_length=255)),
                ('token_type', models.CharField(default='ERC-20', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
